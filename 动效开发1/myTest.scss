// sass 最普遍的用法：变量 `$` 
// sass 父选择器`&`：用于代表嵌套规则外层的父选择器
// CSS3 perspective 属性：改变3D元素是怎样查看透视图
// CSS3 transform-style 属性：指定嵌套元素是怎样在三维空间中呈现
// CSS3 backface-visibility 属性：当元素背面向屏幕时是否可见

// CSS3 transform 属性：应用于元素的2D或3D转换
// 允许你将元素 旋转rotate，缩放scale，移动translate，倾斜skew等。

// CSS3 transition 属性：设置元素当过度效果

$cube-size: 300px;
$cube-radius: $cube-size / 2;

.demo {
  width: $cube-size;
  height: $cube-size;
  perspective: 1000px; // 元素距离视图1000px
  position: relative;
  margin: 30px auto;
}

.cube {
  width: 100%;
  height: 100%;
  transform-style: preserve-3d; // 表示所有子元素在3D空间中呈现
  position: absolute;
  transition: transform ease 1s; // 过度动画
  // （ease）表示 慢速开始，然后变快，然后慢速结束的过渡效果
  // （transform）表示 应用过渡效果的 CSS 属性是 transform
  &.show-default {
    transform: translateZ( - $cube-radius ) rotateY( -15deg ) rotateX( -15deg );
  }
  &.show-left {
    transform: translateZ( - $cube-radius ) rotateY( 90deg );
  }
  &-face { // 编译为 .cube-face
    border: 2px solid #000;
    width: 100%;
    height: 100%;
    position: absolute;
    overflow: hidden;
    opacity: 0.9;
    // backface-visibility: visible;
    &.is-front { // 编译为 .cube-face.is-front
      // 选择 class 属性中同时有 cube-face 和 is-front 的所有元素。
      transform: translateZ( $cube-radius ); // 定义 3D 转换，只是用 Z 轴的值
    }
    // rotateX()方法，围绕其在一个给定度数X轴旋转的元素。
    &.is-back {
      transform: rotateX( -180deg ) translateZ( $cube-radius )
    }
    &.is-right {
      transform: rotateX( 90deg ) translateZ( $cube-radius )
    }
    &.is-left {
      transform: rotateY( -90deg ) translateZ( $cube-radius );
    }
    &.is-top {
      transform: rotateX( 90deg ) translateZ( $cube-radius );
    }
    &.is-bottom {
      transform: rotateX( -90deg ) translateZ( $cube-radius );
    }
  }
  img {
    width: 100%;
  }
}